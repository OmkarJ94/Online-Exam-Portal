version: '3.8'

services:
  exam_platform:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    command: [
      "./wait-for-it.sh", "keycloak:8080",
      "--", "./wait-for-it.sh", "rabbitmq:5672",
      "--", "npm", "run", "dev"
    ]

  video_consumer:
    build: .
    volumes:
      - .:/app
      - /app/node_modules
    env_file:
      - .env
    command: [
      "./wait-for-it.sh", "rabbitmq:5672",
      "--", "npm", "run", "start:consumer"
    ]

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    restart: always
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest

  keycloak:
    image: quay.io/keycloak/keycloak:21.0.1
    command:
      - start-dev
      - --import-realm
      - --http-port=8080
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: dev-file
    volumes:
      - ./realm.json:/opt/keycloak/data/import/realm.json
    restart: always

  api_init:
    image: curlimages/curl
    depends_on:
      - exam_platform
    entrypoint: >
      sh -c "
        echo 'Waiting for exam_platform...';
        sleep 10;
        until curl --fail http://exam_platform:3000/api/topics/seed; do
          echo 'Waiting for API...';
          sleep 3;
        done;
        echo 'API seeded successfully';
      "

volumes:
  mongo-data:
